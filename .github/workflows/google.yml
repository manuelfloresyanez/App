# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to Google Kubernetes Engine when a pull request is made, and also when a release is created
# 
# Additionaly, this workflow performs some Cleaning actions in the Cluster as well as in the Self-Hosted Runner.
# 
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs), and other secrets as you decide.
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: CI

on:
  release:
    types: [created]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: southamerica-east1-a
  GKE_CLUSTER: cluster-23people-development
  IMAGE: node-js
  REGISTRY_HOSTNAME: gcr.io
  DEPLOYMENT_NAME: application-23people
  SHELL_SCRIPT_PATH: ${{ secrets.SHELL_SCRIPT_PATH }}
  MONGO_DB: ${{ secrets.MONGO_DB }}
  NODE_JS_DIST_and_TAG: ${{ secrets.NODE_JS_DIST_and_TAG }}
  FILE_PATH: ${{ secrets.FILE_PATH }}
      

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: self-hosted
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Clean older Docker images from the self-hosted Instance
    - name: Clean Self-Hosted GitHub Runner
      run: |
        sh $SHELL_SCRIPT_PATH
      continue-on-error: true
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
      
    # Build the Docker image
    - name: Build
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
    
    # Create variables to be used in deployment.yaml
    - name: Create variable
      run : |
        echo ::set-env name=DIST_and_TAG::$(sh $NODE_JS_DIST_and_TAG)
    # Add variables to deployment.yaml file
    - name: Add variables
      run : |
        cd $FILE_PATH
        sed -i "s|MONGO_DB_VARIABLE|$MONGO_DB|g" deployment.yaml
        sed -i "s|NODE_JS_VARIABLE|$DIST_and_TAG|g" deployment.yaml

    # Set up kustomize 
    - name: Set up Kustomize
      run: |
        curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        
    # Remove older Demployments from the Google Kubernetes Cluster
    - name: Clean Cluster
      run: |
        kubectl delete deployment $DEPLOYMENT_NAME
      continue-on-error: true
    # Deploy the Docker image to the Google Kubernetes Cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        ./kustomize edit set image $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
